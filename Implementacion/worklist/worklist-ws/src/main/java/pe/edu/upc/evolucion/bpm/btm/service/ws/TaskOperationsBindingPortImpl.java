
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package pe.edu.upc.evolucion.bpm.btm.service.ws;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2014-09-20T17:44:05.697-05:00
 * Generated source version: 3.0.1
 * 
 */

@javax.jws.WebService(
                      serviceName = "TaskService",
                      portName = "TaskOperationsBindingPort",
                      targetNamespace = "http://service.innovaswc.com/ns/bpel4people/ws-humantask/api/201407",
                      wsdlLocation = "classpath:WEB-INF/wsdl/bpm-btm-humantask.wsdl",
                      endpointInterface = "pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations")
                      
public class TaskOperationsBindingPortImpl implements TaskOperations {

    private static final Logger LOG = Logger.getLogger(TaskOperationsBindingPortImpl.class.getName());

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#deleteComment(java.lang.String  taskIdentifier ,)java.lang.String  commentIdentifier )*
     */
    public void deleteComment(java.lang.String taskIdentifier,java.lang.String commentIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation deleteComment");
        System.out.println(taskIdentifier);
        System.out.println(commentIdentifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getOutcome(java.lang.String  identifier )*
     */
    public java.lang.String getOutcome(java.lang.String identifier) throws IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getOutcome");
        System.out.println(identifier);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getRendering(java.lang.String  identifier ,)javax.xml.namespace.QName  renderingType )*
     */
    public java.lang.Object getRendering(java.lang.String identifier,javax.xml.namespace.QName renderingType) throws IllegalArgumentFault    { 
        LOG.info("Executing operation getRendering");
        System.out.println(identifier);
        System.out.println(renderingType);
        try {
            java.lang.Object _return = new java.lang.Object();
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getSubtasks(java.lang.String  taskIdentifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskDetails> getSubtasks(java.lang.String taskIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getSubtasks");
        System.out.println(taskIdentifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskDetails> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#remove(java.lang.String  identifier )*
     */
    public void remove(java.lang.String identifier) throws IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation remove");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getMyTaskAbstracts(java.lang.String  taskType ,)java.lang.String  genericHumanRole ,)java.lang.String  workQueue ,)java.util.List<java.lang.String>  status ,)java.lang.String  whereClause ,)java.lang.String  orderByClause ,)java.lang.String  createdOnClause ,)java.lang.Integer  maxTasks ,)java.lang.Integer  taskIndexOffset )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskAbstract> getMyTaskAbstracts(java.lang.String taskType,java.lang.String genericHumanRole,java.lang.String workQueue,java.util.List<java.lang.String> status,java.lang.String whereClause,java.lang.String orderByClause,java.lang.String createdOnClause,java.lang.Integer maxTasks,java.lang.Integer taskIndexOffset) throws IllegalStateFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getMyTaskAbstracts");
        System.out.println(taskType);
        System.out.println(genericHumanRole);
        System.out.println(workQueue);
        System.out.println(status);
        System.out.println(whereClause);
        System.out.println(orderByClause);
        System.out.println(createdOnClause);
        System.out.println(maxTasks);
        System.out.println(taskIndexOffset);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskAbstract> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getRenderingTypes(java.lang.String  identifier )*
     */
    public java.util.List<javax.xml.namespace.QName> getRenderingTypes(java.lang.String identifier) throws IllegalArgumentFault    { 
        LOG.info("Executing operation getRenderingTypes");
        System.out.println(identifier);
        try {
            java.util.List<javax.xml.namespace.QName> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#skip(java.lang.String  identifier )*
     */
    public void skip(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation skip");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchClaim(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchClaim(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchClaim");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchSuspendUntil(java.util.List<java.lang.String>  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTime  time )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchSuspendUntil(java.util.List<java.lang.String> identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTime time) { 
        LOG.info("Executing operation batchSuspendUntil");
        System.out.println(identifier);
        System.out.println(time);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#delegate(java.lang.String  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity  organizationalEntity )*
     */
    public void delegate(java.lang.String identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity organizationalEntity) throws IllegalStateFault , RecipientNotAllowed , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation delegate");
        System.out.println(identifier);
        System.out.println(organizationalEntity);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new RecipientNotAllowed("recipientNotAllowed...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getOutput(java.lang.String  identifier ,)java.lang.String  part )*
     */
    public java.lang.Object getOutput(java.lang.String identifier,java.lang.String part) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getOutput");
        System.out.println(identifier);
        System.out.println(part);
        try {
            java.lang.Object _return = new java.lang.Object();
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#setOutput(java.lang.String  identifier ,)java.lang.String  part ,)java.lang.Object  taskData )*
     */
    public void setOutput(java.lang.String identifier,java.lang.String part,java.lang.Object taskData) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation setOutput");
        System.out.println(identifier);
        System.out.println(part);
        System.out.println(taskData);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchFail(java.util.List<java.lang.String>  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TFault  fault )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchFail(java.util.List<java.lang.String> identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TFault fault) { 
        LOG.info("Executing operation batchFail");
        System.out.println(identifier);
        System.out.println(fault);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchSetPriority(java.util.List<java.lang.String>  identifier ,)int  priority )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchSetPriority(java.util.List<java.lang.String> identifier,int priority) { 
        LOG.info("Executing operation batchSetPriority");
        System.out.println(identifier);
        System.out.println(priority);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getAttachmentInfos(java.lang.String  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TAttachmentInfo> getAttachmentInfos(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getAttachmentInfos");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TAttachmentInfo> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#forward(java.lang.String  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity  organizationalEntity )*
     */
    public void forward(java.lang.String identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity organizationalEntity) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation forward");
        System.out.println(identifier);
        System.out.println(organizationalEntity);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#deleteOutput(java.lang.String  identifier )*
     */
    public void deleteOutput(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation deleteOutput");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#setGenericHumanRole(java.lang.String  identifier ,)java.lang.String  genericHumanRole ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity  organizationalEntity )*
     */
    public void setGenericHumanRole(java.lang.String identifier,java.lang.String genericHumanRole,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity organizationalEntity) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation setGenericHumanRole");
        System.out.println(identifier);
        System.out.println(genericHumanRole);
        System.out.println(organizationalEntity);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#resume(java.lang.String  identifier )*
     */
    public void resume(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation resume");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#setTaskStartDeadlineExpression(java.lang.String  identifier ,)java.lang.String  deadlineName ,)java.lang.String  deadlineExpression )*
     */
    public void setTaskStartDeadlineExpression(java.lang.String identifier,java.lang.String deadlineName,java.lang.String deadlineExpression) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation setTaskStartDeadlineExpression");
        System.out.println(identifier);
        System.out.println(deadlineName);
        System.out.println(deadlineExpression);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getParentTask(java.lang.String  taskIdentifier )*
     */
    public org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskDetails getParentTask(java.lang.String taskIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getParentTask");
        System.out.println(taskIdentifier);
        try {
            org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskDetails _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchNominate(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchNominate(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchNominate");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#start(java.lang.String  identifier )*
     */
    public void start(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation start");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchRelease(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchRelease(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchRelease");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getTaskOperations(java.lang.String  identifier )*
     */
    public org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskOperations getTaskOperations(java.lang.String identifier) throws IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getTaskOperations");
        System.out.println(identifier);
        try {
            org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskOperations _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchStop(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchStop(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchStop");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchSkip(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchSkip(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchSkip");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchSetGenericHumanRole(java.util.List<java.lang.String>  identifier ,)java.lang.String  genericHumanRole ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity  organizationalEntity )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchSetGenericHumanRole(java.util.List<java.lang.String> identifier,java.lang.String genericHumanRole,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity organizationalEntity) { 
        LOG.info("Executing operation batchSetGenericHumanRole");
        System.out.println(identifier);
        System.out.println(genericHumanRole);
        System.out.println(organizationalEntity);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchRemove(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchRemove(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchRemove");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getTaskDetails(java.lang.String  identifier )*
     */
    public org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskDetails getTaskDetails(java.lang.String identifier) throws IllegalArgumentFault    { 
        LOG.info("Executing operation getTaskDetails");
        System.out.println(identifier);
        try {
            org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskDetails _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchComplete(java.util.List<java.lang.String>  identifier ,)java.lang.Object  taskData )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchComplete(java.util.List<java.lang.String> identifier,java.lang.Object taskData) { 
        LOG.info("Executing operation batchComplete");
        System.out.println(identifier);
        System.out.println(taskData);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#deleteAttachment(java.lang.String  taskIdentifier ,)java.lang.String  attachmentIdentifier )*
     */
    public void deleteAttachment(java.lang.String taskIdentifier,java.lang.String attachmentIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation deleteAttachment");
        System.out.println(taskIdentifier);
        System.out.println(attachmentIdentifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#complete(java.lang.String  identifier ,)java.lang.Object  taskData )*
     */
    public void complete(java.lang.String identifier,java.lang.Object taskData) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation complete");
        System.out.println(identifier);
        System.out.println(taskData);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#instantiateSubtask(java.lang.String  taskIdentifier ,)java.lang.String  name )*
     */
    public java.lang.String instantiateSubtask(java.lang.String taskIdentifier,java.lang.String name) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation instantiateSubtask");
        System.out.println(taskIdentifier);
        System.out.println(name);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getTaskHistory(org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.GetTaskHistory  getTaskHistory )*
     */
    public org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.GetTaskHistoryResponse getTaskHistory(org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.GetTaskHistory getTaskHistory) throws IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getTaskHistory");
        System.out.println(getTaskHistory);
        try {
            org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.GetTaskHistoryResponse _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#release(java.lang.String  identifier )*
     */
    public void release(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation release");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getFault(java.lang.String  identifier )*
     */
    public org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TFault getFault(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getFault");
        System.out.println(identifier);
        try {
            org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TFault _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#setTaskCompletionDurationExpression(java.lang.String  identifier ,)java.lang.String  deadlineName ,)java.lang.String  durationExpression )*
     */
    public void setTaskCompletionDurationExpression(java.lang.String identifier,java.lang.String deadlineName,java.lang.String durationExpression) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation setTaskCompletionDurationExpression");
        System.out.println(identifier);
        System.out.println(deadlineName);
        System.out.println(durationExpression);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#deleteFault(java.lang.String  identifier )*
     */
    public void deleteFault(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation deleteFault");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#addAttachment(java.lang.String  taskIdentifier ,)java.lang.String  name ,)java.lang.String  accessType ,)java.lang.String  contentType ,)java.lang.Object  attachment )*
     */
    public java.lang.String addAttachment(java.lang.String taskIdentifier,java.lang.String name,java.lang.String accessType,java.lang.String contentType,java.lang.Object attachment) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation addAttachment");
        System.out.println(taskIdentifier);
        System.out.println(name);
        System.out.println(accessType);
        System.out.println(contentType);
        System.out.println(attachment);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getInput(java.lang.String  identifier ,)java.lang.String  part )*
     */
    public java.lang.Object getInput(java.lang.String identifier,java.lang.String part) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getInput");
        System.out.println(identifier);
        System.out.println(part);
        try {
            java.lang.Object _return = new java.lang.Object();
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#suspendUntil(java.lang.String  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTime  time )*
     */
    public void suspendUntil(java.lang.String identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTime time) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation suspendUntil");
        System.out.println(identifier);
        System.out.println(time);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#hasSubtasks(java.lang.String  taskIdentifier )*
     */
    public boolean hasSubtasks(java.lang.String taskIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation hasSubtasks");
        System.out.println(taskIdentifier);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getMyTaskDetails(java.lang.String  taskType ,)java.lang.String  genericHumanRole ,)java.lang.String  workQueue ,)java.util.List<java.lang.String>  status ,)java.lang.String  whereClause ,)java.lang.String  orderByClause ,)java.lang.String  createdOnClause ,)java.lang.Integer  maxTasks ,)java.lang.Integer  taskIndexOffset )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskDetails> getMyTaskDetails(java.lang.String taskType,java.lang.String genericHumanRole,java.lang.String workQueue,java.util.List<java.lang.String> status,java.lang.String whereClause,java.lang.String orderByClause,java.lang.String createdOnClause,java.lang.Integer maxTasks,java.lang.Integer taskIndexOffset) throws IllegalStateFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getMyTaskDetails");
        System.out.println(taskType);
        System.out.println(genericHumanRole);
        System.out.println(workQueue);
        System.out.println(status);
        System.out.println(whereClause);
        System.out.println(orderByClause);
        System.out.println(createdOnClause);
        System.out.println(maxTasks);
        System.out.println(taskIndexOffset);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskDetails> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchForward(java.util.List<java.lang.String>  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity  organizationalEntity )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchForward(java.util.List<java.lang.String> identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity organizationalEntity) { 
        LOG.info("Executing operation batchForward");
        System.out.println(identifier);
        System.out.println(organizationalEntity);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#setFault(java.lang.String  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TFault  fault )*
     */
    public void setFault(java.lang.String identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TFault fault) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation setFault");
        System.out.println(identifier);
        System.out.println(fault);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#setTaskStartDurationExpression(java.lang.String  identifier ,)java.lang.String  deadlineName ,)java.lang.String  durationExpression )*
     */
    public void setTaskStartDurationExpression(java.lang.String identifier,java.lang.String deadlineName,java.lang.String durationExpression) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation setTaskStartDurationExpression");
        System.out.println(identifier);
        System.out.println(deadlineName);
        System.out.println(durationExpression);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchStart(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchStart(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchStart");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchSuspend(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchSuspend(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchSuspend");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getTaskDescription(java.lang.String  identifier ,)java.lang.String  contentType )*
     */
    public java.lang.String getTaskDescription(java.lang.String identifier,java.lang.String contentType) throws IllegalArgumentFault    { 
        LOG.info("Executing operation getTaskDescription");
        System.out.println(identifier);
        System.out.println(contentType);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#nominate(java.lang.String  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity  organizationalEntity )*
     */
    public void nominate(java.lang.String identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity organizationalEntity) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation nominate");
        System.out.println(identifier);
        System.out.println(organizationalEntity);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#addComment(java.lang.String  identifier ,)java.lang.String  text )*
     */
    public java.lang.String addComment(java.lang.String identifier,java.lang.String text) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation addComment");
        System.out.println(identifier);
        System.out.println(text);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#isSubtask(java.lang.String  taskIdentifier )*
     */
    public boolean isSubtask(java.lang.String taskIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation isSubtask");
        System.out.println(taskIdentifier);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#claim(java.lang.String  identifier )*
     */
    public void claim(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation claim");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getComments(java.lang.String  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TComment> getComments(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getComments");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TComment> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#query(java.lang.String  selectClause ,)java.lang.String  whereClause ,)java.lang.String  orderByClause ,)java.lang.Integer  maxTasks ,)java.lang.Integer  taskIndexOffset )*
     */
    public org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskQueryResultSet query(java.lang.String selectClause,java.lang.String whereClause,java.lang.String orderByClause,java.lang.Integer maxTasks,java.lang.Integer taskIndexOffset) throws IllegalStateFault , IllegalArgumentFault    { 
        LOG.info("Executing operation query");
        System.out.println(selectClause);
        System.out.println(whereClause);
        System.out.println(orderByClause);
        System.out.println(maxTasks);
        System.out.println(taskIndexOffset);
        try {
            org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskQueryResultSet _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchDelegate(java.util.List<java.lang.String>  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity  organizationalEntity )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchDelegate(java.util.List<java.lang.String> identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TOrganizationalEntity organizationalEntity) { 
        LOG.info("Executing operation batchDelegate");
        System.out.println(identifier);
        System.out.println(organizationalEntity);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getAttachment(java.lang.String  taskIdentifier ,)java.lang.String  attachmentIdentifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TAttachment> getAttachment(java.lang.String taskIdentifier,java.lang.String attachmentIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getAttachment");
        System.out.println(taskIdentifier);
        System.out.println(attachmentIdentifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TAttachment> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#suspend(java.lang.String  identifier )*
     */
    public void suspend(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation suspend");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#updateComment(java.lang.String  taskIdentifier ,)java.lang.String  commentIdentifier ,)java.lang.String  text )*
     */
    public void updateComment(java.lang.String taskIdentifier,java.lang.String commentIdentifier,java.lang.String text) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation updateComment");
        System.out.println(taskIdentifier);
        System.out.println(commentIdentifier);
        System.out.println(text);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getParentTaskIdentifier(java.lang.String  taskIdentifier )*
     */
    public java.lang.String getParentTaskIdentifier(java.lang.String taskIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getParentTaskIdentifier");
        System.out.println(taskIdentifier);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchResume(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchResume(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchResume");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#setTaskCompletionDeadlineExpression(java.lang.String  identifier ,)java.lang.String  deadlineName ,)java.lang.String  deadlineExpression )*
     */
    public void setTaskCompletionDeadlineExpression(java.lang.String identifier,java.lang.String deadlineName,java.lang.String deadlineExpression) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation setTaskCompletionDeadlineExpression");
        System.out.println(identifier);
        System.out.println(deadlineName);
        System.out.println(deadlineExpression);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#stop(java.lang.String  identifier )*
     */
    public void stop(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation stop");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#fail(java.lang.String  identifier ,)org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TFault  fault )*
     */
    public void fail(java.lang.String identifier,org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TFault fault) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation fail");
        System.out.println(identifier);
        System.out.println(fault);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getTaskInstanceData(java.lang.String  identifier ,)java.lang.String  properties ,)java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TRenderingTypes>  renderingPreferences )*
     */
    public org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskInstanceData getTaskInstanceData(java.lang.String identifier,java.lang.String properties,java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TRenderingTypes> renderingPreferences) throws IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getTaskInstanceData");
        System.out.println(identifier);
        System.out.println(properties);
        System.out.println(renderingPreferences);
        try {
            org.oasis_open.docs.ns.bpel4people.ws_humantask.types._200803.TTaskInstanceData _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#batchActivate(java.util.List<java.lang.String>  identifier )*
     */
    public java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> batchActivate(java.util.List<java.lang.String> identifier) { 
        LOG.info("Executing operation batchActivate");
        System.out.println(identifier);
        try {
            java.util.List<org.oasis_open.docs.ns.bpel4people.ws_humantask.api._200803.TBatchResponse> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#getSubtaskIdentifiers(java.lang.String  taskIdentifier )*
     */
    public java.util.List<java.lang.String> getSubtaskIdentifiers(java.lang.String taskIdentifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation getSubtaskIdentifiers");
        System.out.println(taskIdentifier);
        try {
            java.util.List<java.lang.String> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#setPriority(java.lang.String  identifier ,)int  priority )*
     */
    public void setPriority(java.lang.String identifier,int priority) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation setPriority");
        System.out.println(identifier);
        System.out.println(priority);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

    /* (non-Javadoc)
     * @see pe.edu.upc.evolucion.bpm.btm.service.ws.TaskOperations#activate(java.lang.String  identifier )*
     */
    public void activate(java.lang.String identifier) throws IllegalStateFault , IllegalAccessFault , IllegalOperationFault , IllegalArgumentFault    { 
        LOG.info("Executing operation activate");
        System.out.println(identifier);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IllegalStateFault("illegalStateFault...");
        //throw new IllegalAccessFault("illegalAccessFault...");
        //throw new IllegalOperationFault("illegalOperationFault...");
        //throw new IllegalArgumentFault("illegalArgumentFault...");
    }

}
